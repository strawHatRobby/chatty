{"version":3,"sources":["stylesheets/theme1.js","components/gif.js","steps/coachSteps.js","steps/words.js","App.js","components/lottie.jsx","serviceWorker.js","index.js","logo.svg","img/tenor.gif"],"names":["avatar","borderRadius","Gif","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","autoPlay","src","type","width","url","Component","coachSteps","gif","id","message","trigger","user","component","require","headerTitle","placeholder","delay","options","value","label","end","App","React","opened","_this2","className","logo","alt","react_simple_chatbot_default","steps","floating","botAvatar","avatarStyle","cache","toggleFloating","enableMobileAutoFocus","recognitionEnable","botDelay","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c5712b6c.chunk.js","sourcesContent":[" export const orangeTheme =  {\n    background: '#000',\n    fontFamily: 'Helvetica Neue',\n    headerBgColor: 'green',\n    headerFontColor: '#fff',\n    headerFontSize: '15px',\n    botBubbleColor: 'green',\n    botFontColor: '#fff',\n    userBubbleColor: '#fff',\n    userFontColor: '#fff',\n  }\n  \n export const avatar  = {\n    borderRadius: '100%',\n\n   }","import React, { Component } from 'react';\nimport Sound from 'react-sound';\n// import \"./baloon.css\"\n\nclass Gif extends Component {\n  constructor(props){\n    super(props);\n    this.state = {        \n    }\n  }\n\n  render(){\n    return (\n      <div>\n        {/* <div class=\"balloon-container\">\n  <div class=\"baloons\">\n\n    <div><span>L</span></div>\n    <div><span>E</span></div>\n    <div><span>V</span></div>\n    <div><span>E</span></div>\n    <div><span>L</span></div>\n    <div><span> </span></div>\n\n\n  </div>\n\n</div> */}\n        <audio autoPlay>\n        <source src=\"https://s3.ap-south-1.amazonaws.com/robsacloudbucket/chatty/crowdCheer.mp3\" type=\"audio/mpeg\" >\n\t\t\t</source>\n        </audio>\n          <img width=\"80%\" src={this.props.url}/>\n      </div>\n    )\n  }\n\n}\n\nexport default Gif;","import Gif from '../components/gif';\nimport React from 'react';\n\nexport const coachSteps = [{\n    id: 'first',\n    message: 'Alright Maggot!',\n    trigger: 'name?'\n},\n{\n    id: 'name?',\n    message: 'What do they call ya?',\n    trigger: 'name-answer'\n},\n{\n    id: 'name-answer',\n    user: true,\n    trigger: 'doesntMatter'\n},\n{\n    id: 'doesntMatter',\n    component: (\n        <Gif url={require('../img/tenor.gif')}/>\n    ),\n    trigger: 'intro'\n},\n{\n    id: 'intro',\n    message: \"I'm your coach, you better ot be absconding my training sessions\",\n    trigger: 'gotIt?'\n},\n{\n    id: 'gotIt?',\n    headerTitle: 'Yes or No?',\n    placeholder: 'Answer',\n    delay: 1000,\n    options: [\n        { value: 1, label: 'Yes', trigger: 'question1'},\n        { value: 0, label: 'No', trigger: 'explain1'},\n    ],\n},\n{\n    id: 'explain1',\n    message: \"Guess you don't know absconding means, otherwise you wouldn't say that to someone like me!\",\n    trigger: 'angryGif'\n},\n{\n    id: 'angryGif',\n    component: (\n        <Gif url={'https://media.giphy.com/media/3t7RAFhu75Wwg/giphy.gif'}/>\n    ),\n    trigger: 'noQuestion1'\n},\n{\n    id: 'question1',\n    message: 'Yes huh? I better make sure then, what does absconding means maggot?',\n    trigger: 'abscondingOptions'\n},\n{\n    id:'abscondingOptions',\n    options: [\n        { value: '0', label: 'doing ab crunches', trigger: 'hint1.1'},\n        { value: '1', label: 'to secretly evade', trigger: 'questionexplainAbash'},\n        { value: '2', label: 'reveal secrets', trigger: 'hint1.2'},\n        { value: '3', label: 'make fun of', trigger: 'hint1.1'},\n    ]\n},\n{\n    id: 'noQuestion1',\n    message: 'I better make sure then, what does absconding means maggot?',\n   trigger: 'abscondingOptions'\n},\n{\n    id: 'hint1.1',\n    message: 'Lots of college kids do it',\n    trigger: 'question1'\n},\n{\n    id: 'hint1.2',\n    message: 'If you are in a boring seminar, you might want to absocnd it',\n    trigger: 'question1'\n},\n{\n    id: 'questionexplainAbash',\n    message: \"Do you know why you shouldn't be absocnding my training?\",\n    trigger: 'evadeTraining'\n},\n{\n    id: 'evadeTraining',\n    options: [\n        { value: '1', label: 'Yes', trigger: 'abash'},\n        { value: '0', label: 'No', trigger: 'explainAbash'},       \n    ]\n},\n{\n    id: 'abash',\n    message: \"That's right! cause if you did, I'm gonna abash you like nobody on this planet earth has ever been! Understood?\",\n    trigger: 'abashYes'\n},\n{\n    id:'abashYes',\n    options: [\n        { value: '1', label: 'Yes', trigger: 'abash'},\n        { value: '0', label: 'No', trigger: 'explainAbash'},       \n    ]\n},\n{\n    id: 'explainAbash',\n    message: \"It means I'm gonna humiliate you in a way no being has ever been on this planet\",\n    trigger: 'yoMamaGif'\n},\n{\n    id: 'yoMamaGif',\n    component: (\n        <Gif url={'https://i.giphy.com/media/bkdMDA577saRi/giphy.webp'}/>\n    ),\n    trigger: 'end'\n},\n{\n    id: 'end',\n    message: \"That'll be all maggot!\",\n    end: true\n}\n\n]\n","import Gif from '../components/gif';\nimport React from 'react';\n\nexport const words = [{\n    id: 'first',\n    message: 'Hey there!',\n    trigger: 'name?'\n},\n{\n    id: 'name?',\n    message: 'Whats your name?',\n    isLast: true,\n    trigger: 'name-answer'\n},\n{\n    id: 'name-answer',\n    placeholder: 'You can type or use the mic to speak your name',\n    user: true,\n    trigger: 'salutation'\n},\n{\n    id: 'salutation',\n    message: 'Nice to meet you {previousValue}!',\n    trigger: 'ready'\n},\n{\n    id: 'ready',\n    message: 'Ready to play the game?',\n    trigger: 'ready-answer',\n},\n{\n    id: 'ready-answer',\n    options: [\n        { value: 1, label: 'Yes', trigger: '1'},\n        { value: 0, label: 'No', trigger: 'affirm-ready'}\n    ],\n},\n{ \n    id: 'affirm-ready',\n    message: 'Click yes Whenever you are ready!',\n    trigger: 'ready-answer'\n},\n\n{\n    id: '1',\n    message: 'You first word is ',\n    trigger: '2',\n},\n{\n    id: '2',\n    message: 'abase',\n    trigger: '3'\n},\n{\n    id: '3',\n    headerTitle: 'Chatty says, select your answer',\n    placeholder: 'Select an Option OR Type in your Answer',\n    delay: 7000,\n    options: [\n        { value: 1, label: 'something very basic', trigger: '4'},\n        { value: 2, label: 'Feel Humiliated', trigger: '5'},\n        { value: 3, label: 'foundation of something', trigger: '4'},\n        { value: 4, label: 'abuse', trigger: '4'},\n    ],\n},\n{\n    id: '4',\n    message: 'wrong answer',\n    delay: 2000,\n    trigger: '7'\n},\n{\n    id: '5',\n    message: 'correct',\n    trigger: '6'\n},\n{\n    id: '6',\n    component: (\n        <Gif url={'https://media.giphy.com/media/5xxnEC4NF0x0c/giphy-downsized.gif'}/>\n    ),\n    trigger: '2'\n},\n{\n    id: '7',\n    options: [\n        {\n            value: 10, label: 'hint', trigger: '15'\n        },\n        {\n            value: 11, label: 'give up', trigger: '100',\n        },\n        {\n            value: 12, label: 'try again', trigger: '3',\n        }\n    ]\n},\n{\n    id: '15',\n    message: 'desperate people do this',\n    delay: 2000,\n    trigger: '3'\n},\n{\n    id:'100',\n    message: 'You suck for quitting. Bye!',\n    end: true\n},\n{\n    \n}\n\n]\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport { orangeTheme, avatar } from './stylesheets/theme1';\nimport { words } from './steps/words';\nimport { coachSteps } from './steps/coachSteps'\nimport LottieControl from './components/lottie'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n  this.state = {\n      opened: true,\n    }\n  }\n  render() {\n    const steps=[\n      {\n        id: '1',\n        message: 'You can add custom components',\n        trigger: '2',\n      },\n      {\n        id: '2',\n        component: (\n          <div></div>\n        ),\n        end: true,\n      },\n    ]\n    const toggleFloating = (value) => {\n      return !this.state.opened;\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <ChatBot steps={coachSteps} floating={true} botAvatar={'https://et.tv/2CNhf3i'}\n            avatarStyle={avatar}\n            cache={false}\n            opened={this.state.opened}\n            toggleFloating={toggleFloating(this.state.opened)}\n            enableMobileAutoFocus={true}\n            recognitionEnable={true}\n            botDelay={2000}\n          />\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport Lottie from 'react-lottie';\nimport * as animationData from './pinjump.json'\n \nexport default class LottieControl extends React.Component {\n \n  constructor(props) {\n    super(props);\n    this.state = {isStopped: false, isPaused: false};\n  }\n \n  render() {\n    const buttonStyle = {\n      display: 'block',\n      margin: '10px auto'\n    };\n \n    const defaultOptions = {\n      loop: true,\n      autoplay: true, \n      animationData: animationData,\n      rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n      }\n    };\n\n    return (<div>\n    console.log(animationData);\n      <Lottie options={defaultOptions}\n              height={400}\n              width={400}\n              isStopped={this.state.isStopped}\n              isPaused={this.state.isPaused}/>\n      <button style={buttonStyle} onClick={() => this.setState({isStopped: true})}>stop</button>\n      <button style={buttonStyle} onClick={() => this.setState({isStopped: false})}>play</button>\n      <button style={buttonStyle} onClick={() => this.setState({isPaused: !this.state.isPaused})}>pause</button>\n    </div>\n    )\n  }\n}\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App/>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/tenor.49e5b7af.gif\";"],"sourceRoot":""}